---
export interface Props {
	title: string;
	body: string;
	href: string;
	classes: string;
	external: boolean;
	flipped?: boolean;
}

const { href, title, body, classes, external, flipped } = Astro.props;
---

<li class={`link-card ${classes}`}>
	<a href={href} target={external ? "_blank" : ""}>
		<h2>
			{flipped ? <span class="flipped">&larr;</span> : null}
			{title}
			{!flipped ? <span class="normal">&rarr;</span> : null}
		</h2>
		<p>
			{body}
		</p>
	</a>
</li>
<style>
	:root {
		--link-gradient: linear-gradient(
			45deg,
			#b9b0ff,
			#d179c0,
			30%,
			var(--color-border) 60%
		);
	}

	.fixed {
		position: fixed;
		scale: 0.5;
		top: 0;
		left: -16px;
	}

	.link-card {
		list-style: none;
		display: flex;
		padding: 0.15rem;
		background-image: var(--link-gradient);
		background-size: 400%;
		border-radius: 0.5rem;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		width: fit-content;
	}

	.link-card > a {
		width: 100%;
		text-decoration: none;
		padding: 0.5em 0.5em 0 0.5em;
		border-radius: 0.35rem;
		color: var(--text-color);
		background-color: white;
		opacity: 0.8;
		align-items: center;
		height: fit-content;
	}

	h2 {
		margin: 0;
		color: var(--color-bg);
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}

	p {
		margin-top: 0.75rem;
		margin-bottom: 0;
	}

	h2 span {
		display: inline-block;
		transition: transform 0.3s cubic-bezier(0.22, 1, 0.36, 1);
	}

	.link-card:is(:hover, :focus-within) {
		background-position: 0;
	}

	.link-card:is(:hover, :focus-within) h2 {
		color: #4f39fa;
	}

	.link-card:is(:hover, :focus-within) h2 span.normal {
		will-change: transform;
		transform: translateX(2px);
	}

	.link-card:is(:hover, :focus-within) h2 span.flipped {
		will-change: transform;
		transform: translateX(-2px);
	}
</style>
